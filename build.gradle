apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'maven'

applicationName = 'xml2xpath'
sourceCompatibility = 1.8
mainClassName = 'iox.xml2xpath.XML2XPathDriver'
group 'iox'
version = '0.0.1'

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId group
        artifactId applicationName
        inceptionYear '2018'
        packaging 'jar'
    }
}

def jarFile = buildDir.name + "/libs/" + applicationName + "-" + version + ".jar"

repositories {
    jcenter()
    maven {url 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath;}
}

clean {
    delete "${buildDir}" 
    delete "${applicationName}" 
}

configurations.all {
    exclude module: 'slf4j-log4j12'
}

dependencies {
    implementation "iox:iox.utils:1.2.0"
    implementation "args4j:args4j:2.33"
	
	// Hazoo
    implementation "org.apache.hadoop:hadoop-client:${hadver}"
	implementation "iox.xml:iox.hadoop.utils:0.0.1"
	
	// XML 
//    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${logver}" 
	implementation group: "commons-collections", name: "commons-collections", version: "3.2"
	
    testCompile "junit:junit:4.+"
}

test {
    systemProperties 'property': 'value'
}

task bundle {
    dependsOn jar
    inputs.file jarFile
    outputs.dir "${applicationName}"
   doLast{ 
      copy {
            from "${buildDir}/libs"
            into "${applicationName}"
            fileMode = 0777
        }
       copy {
            from "conf/"
            into "${applicationName}/conf"
        }
       copy {
            from configurations.runtimeClasspath
            into "${applicationName}/lib"
        }
   }
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes ('Implementation-Title' : 'XML 2 XPath',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName,
                   'Class-Path': ' lib/' + configurations.runtimeClasspath.collect { it.getName() }.join(' lib/'))
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
}